<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blog on Anthony's blog</title><link>https://sudrizzz.github.io/categories/blog/</link><description>Recent content in blog on Anthony's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 09 Aug 2020 15:00:00 +0800</lastBuildDate><atom:link href="https://sudrizzz.github.io/categories/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Github 自动部署与图床</title><link>https://sudrizzz.github.io/posts/integrating-with-github-action/</link><pubDate>Sun, 09 Aug 2020 15:00:00 +0800</pubDate><guid>https://sudrizzz.github.io/posts/integrating-with-github-action/</guid><description>&lt;h1 id="前情提要">前情提要&lt;/h1>
&lt;p>在前文中我们实现了在 Github 中部署博客，此文将简化发文操作步骤，并实现文章图片管理。&lt;/p>
&lt;h1 id="创建仓库">创建仓库&lt;/h1>
&lt;blockquote>
&lt;p>注意：&lt;br>
由于 &lt;code>username&lt;/code> 不方便叙述，故下文中均以 &lt;code>sudrizzz&lt;/code> 为例替代 &lt;code>username&lt;/code>，&lt;br>
请读者根据实际情况进行更改。&lt;/p>
&lt;/blockquote>
&lt;p>在上文中我们已经创建了一个名为 &lt;code>&amp;lt;username&amp;gt;.github.io&lt;/code> 的仓库，现在还需要创建另一个仓库来存放文章管理文件。仓库名任意，公有与私有均可。另外，还需要创建一个仓库来存储文章中涉及到的图片，仓库名任意，但必须是&lt;strong>公有&lt;/strong>的。本例中，我们所用到的仓库名如下。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>仓库名&lt;/th>
&lt;th>用途&lt;/th>
&lt;th>公有或私有&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>blog_workflow&lt;/td>
&lt;td>存储博客中文章或者主题等原始文件&lt;/td>
&lt;td>私有&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sudrizzz.github.io&lt;/td>
&lt;td>存储 Hugo 生成的静态文件&lt;/td>
&lt;td>公有&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>blog_images&lt;/td>
&lt;td>存储图片文件&lt;/td>
&lt;td>公有&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="拆分文件">拆分文件&lt;/h1>
&lt;p>上文中我们只是将 &lt;code>/public&lt;/code> 文件夹提交到了 &lt;code>sudrizzz.github.io&lt;/code> 仓库，现在我们还需要将除了 &lt;code>/public&lt;/code> 以外的文件全部提交到 &lt;code>blog_workflow&lt;/code>，实现这一步可以再本地建立两个对应的文件夹，分别进行提交，操作步骤不再赘述。拆分后的目录结构如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">blog_workflow 仓库
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─archetypes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─content
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─cn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─posts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─layouts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─resources
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─_gen
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└─themes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └─yinyang
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudrizzz.github.io 仓库
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─categories
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─css
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─highlight
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─fonts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─images
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─posts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└─tags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="配置公私密钥">配置公私密钥&lt;/h1>
&lt;h2 id="生成密钥">生成密钥&lt;/h2>
&lt;p>打开 Git Bash，执行如下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa -b &lt;span class="m">4096&lt;/span> -C &lt;span class="s2">&amp;#34;sudrizzz.github.io&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>设置密钥存储位置，按照提示进行操作，不需要自定义一路回车即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Generating public/private rsa key pair.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter file in which to save the key (/c/Users/.ssh/id_rsa):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter passphrase (empty for no passphrase):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter same passphrase again:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your identification has been saved in /c/Users/.ssh/deploy.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your public key has been saved in /c/Users/.ssh/deploy.pub.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The key fingerprint is:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SHA256:MpU2IEDuvNADO1AVWrQx/3HMAECYw+C3taw+5Fyy2F4 sudrizzz.github.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The key&amp;#39;s randomart image is:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---[RSA 4096]----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|.++B@oo.. |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|.o=o * . = |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|o.oo... * + |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|.*. + .+ + |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|+ =. oo S |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| o =.. o |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| B.+E |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| ..*. |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| .o. |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----[SHA256]-----+
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成的密钥文件放置在 &lt;code>c/Users/&amp;lt;user&amp;gt;/.ssh/&lt;/code> 文件夹中，分别是&lt;/p>
&lt;ul>
&lt;li>id_rsa&lt;/li>
&lt;li>id_rsa.pub&lt;/li>
&lt;/ul>
&lt;p>其中后缀为 .pub 的文件为公钥，另一个则为私钥。&lt;/p>
&lt;h2 id="配置密钥">配置密钥&lt;/h2>
&lt;h3 id="配置私钥">配置私钥&lt;/h3>
&lt;p>打开 &lt;code>blog_workflow&lt;/code> 仓库，进入 &lt;code>Settings&lt;/code> -&amp;gt; &lt;code>Secrets&lt;/code>，选择 &lt;code>New secret&lt;/code>，名称填写为 &lt;strong>ACTIONS_DEPLOY_KEY&lt;/strong>，后续需要用到该名称。&lt;br>
打开 &lt;strong>id_rsa&lt;/strong>，并复制其全部内容，粘贴到 &lt;code>Value&lt;/code> 中，点击添加。&lt;/p>
&lt;h3 id="配置公钥">配置公钥&lt;/h3>
&lt;p>打开 &lt;code>sudrizzz.github.io&lt;/code> 仓库，进入 &lt;code>Settings&lt;/code> -&amp;gt; &lt;code>Deploy keys&lt;/code>，选择 &lt;code>Add deploy key&lt;/code>，名字可以任意写。&lt;br>
打开 &lt;strong>id_rsa.pub&lt;/strong>，并复制其全部内容，粘贴到 &lt;code>Key&lt;/code> 中，勾选 &lt;code>Allow write access&lt;/code>，点击添加。
&lt;img src="https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main/20200809154958.png"
loading="lazy"
alt="20200809154958"
>&lt;/p>
&lt;h1 id="配置-action-脚本">配置 Action 脚本&lt;/h1>
&lt;p>打开 &lt;code>blog_workflow&lt;/code> 仓库，进入 &lt;code>Action&lt;/code>，初始化左侧界面，选择 &lt;code>set up a workflow yourself&lt;/code>，在编辑框中粘贴如下配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">name: CI
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 持续发布的分支&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">on:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> push:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches: master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行的 jobs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jobs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 编译环境&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> build:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runs-on: ubuntu-latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 执行的步骤&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> steps:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 检出 sudrizzz/blog_workflow 工程，固定写法&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - uses: actions/checkout@v1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Setup Hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: peaceiris/actions-hugo@v2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo-version: latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 执行 hugo，编译出源文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: hugo --gc --minify --cleanDestinationDir
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 部署&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Deploy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: peaceiris/actions-gh-pages@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deploy_key: &lt;span class="si">${&lt;/span>&lt;span class="p">{ secrets.ACTIONS_DEPLOY_KEY &lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="o">}&lt;/span> &lt;span class="c1"># 上面配置的私钥名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> external_repository: sudrizzz/sudrizzz.github.io &lt;span class="c1"># Pages 发布到远程仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> publish_dir: ./public &lt;span class="c1"># hugo 编译生成的 public 目录下的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> keep_files: &lt;span class="nb">false&lt;/span> &lt;span class="c1"># 不保留 *.github.io 仓库中已有的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> publish_branch: master &lt;span class="c1"># 远程仓库分支&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> commit_message: &lt;span class="si">${&lt;/span>&lt;span class="p">{ github.event.head_commit.message &lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意修改第 33 行 &lt;code>external_repository&lt;/code> 中的用户名。
该配置的文件名任意，例如 &lt;code>main.yml&lt;/code>。保存后即可在 Actions 界面查看脚本执行情况。每当 &lt;code>blog_workflow&lt;/code> 仓库有新的 push 操作时，就会自动执行该脚本，然后将执行后生成的文件自动提交到 &lt;code>sudrizzz.github.io&lt;/code>。&lt;/p>
&lt;p>至此，利用 Github Actions 实现自动部署就已经完成了，写作步骤简化为：&lt;/p>
&lt;ol>
&lt;li>在 &lt;code>content/posts/cn/&lt;/code> 目录中新增文章，修改相关头信息，完成内容创作并保存；&lt;/li>
&lt;li>执行 &lt;code>hugo server&lt;/code> 并访问 &lt;code>localhost:1313&lt;/code> 查看文章显示效果；&lt;/li>
&lt;li>提交新文章到 &lt;code>blog_workflow&lt;/code>；&lt;/li>
&lt;li>上述 Action 自动编译并将生成的静态文件部署到 &lt;code>sudrizzz.github.io&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>创作流程得到了极大的简化。下面将介绍使用 Github 作为图床的相关配置。&lt;/p>
&lt;h1 id="安装并配置-picgo">安装并配置 PicGo&lt;/h1>
&lt;p>本文使用的方案是 VSCode + PicGo 扩展，所以首先打开 VSCode 安装好 PicGo，此处不再赘述。&lt;/p>
&lt;p>如果需要使用 PicGo Windows 客户端，请点击 &lt;a class="link" href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener"
>https://github.com/Molunerfinn/PicGo/releases&lt;/a> 下载，并跳过本节配置说明。&lt;/p>
&lt;h2 id="生成-token">生成 Token&lt;/h2>
&lt;p>点击 Github 右上角个人头像，进入 &lt;code>Settings&lt;/code> -&amp;gt; &lt;code>Developer settings&lt;/code> -&amp;gt; &lt;code>Personal access tokens&lt;/code>，点击 &lt;code>Generate new token&lt;/code>。&lt;br>
Note 中可以任意填写，勾选下方的 &lt;code>repo&lt;/code> 复选框，点击页面最下方的 &lt;code>Generate token&lt;/code>，复制生成的 token 字符串。
&lt;img src="https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main/20200809161038.png"
loading="lazy"
alt="20200809161038"
>&lt;/p>
&lt;h2 id="配置-picgo">配置 PicGo&lt;/h2>
&lt;p>在 VSCode 中打开 PicGo 的设置界面，将复制的 token 字符串填到 &lt;code>picgo.picBed.github.token&lt;/code> 中，具体配置见下图。
&lt;img src="https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main/20201221163830.png"
loading="lazy"
alt="20201221163830"
>&lt;/p>
&lt;ul>
&lt;li>&lt;code>picgo.picBed.github.customUrl&lt;/code>&lt;br>
此项是利用 jsDelivr CDN 为图片进行加速服务，填写时只需将 &lt;code>sudrizzz/blog_images&lt;/code> 更改为自己的用户名与仓库即可，具体如下。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>picgo.picBed.github.path&lt;/code>&lt;br>
此项是配置图片的存储路径，根目录为 &lt;code>picgo.picBed.github.repo&lt;/code> 中设置的仓库。&lt;/li>
&lt;/ul>
&lt;p>当然你可以新建一个仓库专门用来存储图片，只需要调整上述相关设置，使其保持一致即可。&lt;/p>
&lt;h1 id="使用-picgo-写作">使用 PicGo 写作&lt;/h1>
&lt;p>在编写 markdown 文件需要插入图片时，只需要使用相应的快捷键即可完成上传图片操作，具体如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">从剪贴板上传图像
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Windows / Unix：Ctrl + Alt + U
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">OSX：Cmd + Opt + U
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">从资源管理器上传图像
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Windows / Unix：Ctrl + Alt + E
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">OSX：Cmd + Opt + E
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="结语">结语&lt;/h1>
&lt;p>至此，搭建 Github Pages 系列文章就到此结束了，作者的需求基本得到了满足，感谢您的阅读。&lt;/p></description></item><item><title>从零搭建 Github Pages</title><link>https://sudrizzz.github.io/posts/build-blog-from-scratch/</link><pubDate>Sun, 09 Aug 2020 12:00:00 +0800</pubDate><guid>https://sudrizzz.github.io/posts/build-blog-from-scratch/</guid><description>&lt;h1 id="创建仓库">创建仓库&lt;/h1>
&lt;p>首先需要在 Github 中创建一个名为 &lt;code>&amp;lt;username&amp;gt;.github.io&lt;/code> 的仓库，其中 &lt;code>&amp;lt;username&amp;gt;&lt;/code> 为你的 Github 用户名。&lt;/p>
&lt;blockquote>
&lt;p>注意：&lt;br>
由于 &lt;code>username&lt;/code> 不方便叙述，故下文中均以 &lt;code>sudrizzz&lt;/code> 为例替代 &lt;code>username&lt;/code>，&lt;br>
请根据实际情况进行更改。&lt;/p>
&lt;/blockquote>
&lt;p>例如我的 Github 用户名是 &lt;code>sudrizzz&lt;/code>，于是创建的仓库名就是 &lt;code>sudrizzz.github.io&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main/20200809134438.png"
loading="lazy"
alt="20200809134438"
>&lt;/p>
&lt;h1 id="初始化-hugo">初始化 Hugo&lt;/h1>
&lt;h2 id="安装-hugo-应用">安装 Hugo 应用&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>https://github.com/gohugoio/hugo/releases&lt;/a>&lt;/p>
&lt;h2 id="配置环境变量">配置环境变量&lt;/h2>
&lt;p>将安装 Hugo 的目录路径配置到用户环境变量 &lt;code>PATH&lt;/code> 中，如图
&lt;img src="https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main/20200809135128.png"
loading="lazy"
alt="20200809135128"
>&lt;/p>
&lt;h2 id="检验配置">检验配置&lt;/h2>
&lt;p>在命令行窗口中输入以下内容&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果得到类似以下的结果则说明配置正确。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Hugo Static Site Generator v0.74.3-DA0437B4 windows/amd64 BuildDate: 2020-07-23T16:23:30Z
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="创建博客">创建博客&lt;/h1>
&lt;p>在命令行中输入以下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hugo new site &amp;lt;blog_name&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上述命令将会创建一个名为 blog_name 的文件夹，请按照个人喜好取名。按照我的博客为例，取名为 &lt;code>sudrizzz.github.io&lt;/code>，这样也方便后续进行代码提交&lt;/p>
&lt;h2 id="添加主题">添加主题&lt;/h2>
&lt;p>以 &lt;a class="link" href="https://github.com/joway/hugo-theme-yinyang" target="_blank" rel="noopener"
>yinyang&lt;/a> 主题为例，按照文档中的安装步骤，执行以下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> sudrizzz.github.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone git@github.com:joway/hugo-theme-yinyang.git themes/yinyang
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>进入 &lt;code>sudrizzz.github.io/themes/yinyang/exampleSite&lt;/code> 目录，将 &lt;code>content&lt;/code> 文件夹和 &lt;code>config.toml&lt;/code> 文件拷贝到 &lt;code>sudrizzz.github.io&lt;/code> 目录。&lt;/p>
&lt;h2 id="自定义主题">自定义主题&lt;/h2>
&lt;p>根据 &lt;a class="link" href="https://github.com/joway/hugo-theme-yinyang#configuration" target="_blank" rel="noopener"
>yinyang 主题配置文档&lt;/a>，我们可以按需修改其中的内容即可，以下贴出我自定义的配置内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">baseURL&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://sudrizzz.github.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">languageCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;zh-cn&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Anthony&amp;#39;s Blog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">theme&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;yinyang&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">DefaultContentLanguage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;cn&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">author&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Anthony Qu&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">homepage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://github.com/sudrizzz/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># [languages.en]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># contentDir = &amp;#34;content/en&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># languageName = &amp;#34;English&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># weight = 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">languages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cn&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contentDir&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;content/cn&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">languageName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Chinese&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">weight&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">disqus&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;sudri&amp;#34;&lt;/span> &lt;span class="c"># disqus account name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">extraHead&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">mainSections&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;posts&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># googleAnalytics = &amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># description = &amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">socials&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Github&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">link&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://github.com/sudrizzz/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">socials&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;RSS&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">link&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/index.xml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="添加文章">添加文章&lt;/h1>
&lt;p>在 &lt;code>sudrizzz.github.io&lt;/code> 文件夹中执行以下命令以新增文章&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new content/cn/posts/my-first-post.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是我个人不建议这么操作，原因有两点&lt;/p>
&lt;ol>
&lt;li>此主题的 posts 目录分为 cn 和 en，也就是中文和英语目录，路径较长，敲命令不是很方便；&lt;/li>
&lt;li>md 文件中需要包含特定格式的头信息（如下），才能被正常渲染，而通过上述命令生成的 md 文件是空白文件，自己添加头信息也不太现实。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">md 头信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: &amp;#34;从零搭建 Github Pages&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date: 2020-08-09T00:00:00+08:00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">draft: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">categories: [&amp;#34;blog&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">slug: &amp;#34;build-blog-from-scratch&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">其中各项含义如下
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: 文章显示标题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date: 文章创建日期与时间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">draft: 是否为草稿状态
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">categories: 分类信息，可添多个关键词，用半角逗号分隔
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">slug: 文章渲染后的 url
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>所以我更推荐直接拷贝已有的文章，然后修改其中的内容（包括头信息）即可。
在此我创建了名为 TestFile.md 的测试文件以作演示，完整内容如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: &amp;#34;这是一个测试文件&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date: 2020-01-01T00:00:00+08:00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">draft: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">categories: [&amp;#34;test&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">slug: &amp;#34;this-is-a-test-file&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">This is a test file.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Nothing special here.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="启动服务">启动服务&lt;/h1>
&lt;p>在 &lt;code>sudrizzz.github.io&lt;/code> 目录执行以下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>会得到类似于如下的信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Building sites …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | CN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------+-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pages | 17
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Paginator pages | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non-page files | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Static files | 13
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Processed images | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aliases | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sitemaps | 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cleaned | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Built in 28 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Watching for changes in D:\Blog\sudrizzz.github.io\{archetypes,content,layouts,themes}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Watching for config changes in D:\Blog\sudrizzz.github.io\config.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Environment: &amp;#34;development&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Serving pages from memory
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Press Ctrl+C to stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到最后一行显示已经启动成功，页面地址是 http://localhost:1313/ ，访问这个地址即可看到如下效果。&lt;br>
&lt;img src="https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main/20200809143708.png"
loading="lazy"
alt="20200809143708"
>
点击标题进入文章即可看到全部内容。&lt;br>
&lt;img src="https://cdn.jsdelivr.net/gh/sudrizzz/blog_images@main/20200809144430.png"
loading="lazy"
alt="20200809144430"
>&lt;/p>
&lt;h1 id="编译文章">编译文章&lt;/h1>
&lt;blockquote>
&lt;p>说明：&lt;br>
下述命令中的参数可以根据 Hugo 官方文档按需添加&lt;br>
&lt;a class="link" href="https://gohugo.io/commands/hugo/#options" target="_blank" rel="noopener"
>https://gohugo.io/commands/hugo/#options&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hugo --minify --cleanDestinationDir
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以得到如下结果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Building sites …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | CN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-------------------+-----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Pages | 14
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Paginator pages | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Non-page files | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Static files | 13
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Processed images | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aliases | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sitemaps | 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Cleaned | 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total in 29 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样就编译完成了，编译后生成的静态文件放在 &lt;code>sudrizzz.github.io/public&lt;/code> 目录下。结构如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">├─categories
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─css
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─highlight
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─fonts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─images
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─posts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └─this-is-a-test-file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└─tags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此博客就基本搭建完成了。接下来要做的就是与前文中提到的 Github Pages 仓库结合起来。&lt;/p>
&lt;h1 id="推送到-github">推送到 Github&lt;/h1>
&lt;blockquote>
&lt;p>说明 1：&lt;br>
此处涉及到 Git 的相关操作，请先根据其他教程配置好 Git 环境再执行命令；&lt;br>
或者也可以安装一些 Git 可视化工具来简化操作，例如 TortoiseGit。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>说明 2:&lt;br>
我们只需要将 Hugo 生成的静态文件托管到 Github，&lt;br>
所以请确保下述命令是在 &lt;code>/pulic&lt;/code> 目录中执行的。&lt;/p>
&lt;/blockquote>
&lt;p>在 &lt;code>sudrizzz.github.io/pulic&lt;/code> 目录中执行以下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/sudrizzz/sudrizzz.github.io.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;&amp;lt;commit_info&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样博客的所有内容就都已经推送到了 Github，稍等片刻，即可访问 sudrizzz.github.io 查看部署结果。&lt;/p>
&lt;h1 id="总结">总结&lt;/h1>
&lt;p>前文搭建的博客是由 Github Pages + Hugo 实现的，具体的新增文章步骤可以总结为以下几点。&lt;/p>
&lt;ol>
&lt;li>在 &lt;code>content/posts/cn/&lt;/code> 目录中新增文章，修改相关头信息，完成内容创作并保存；&lt;/li>
&lt;li>执行 &lt;code>hugo server&lt;/code> 并访问 &lt;code>localhost:1313&lt;/code> 查看文章显示效果，酌情修改；&lt;/li>
&lt;li>执行 &lt;code>hugo --minify --cleanDestinationDir&lt;/code>；&lt;/li>
&lt;li>进入 &lt;code>/public&lt;/code> 目录，将新生成或编辑过的内容推送到 Github，此处不再赘述。&lt;/li>
&lt;/ol>
&lt;p>此时我们的博客就创建好了，但是创建文章内容的操作有一些复杂和繁琐，且本文中并未讲解关于 markdown 中插入图片的相关问题。所以在下文中，我们将简化操作步骤，并实现将图片也托管到 Github 的操作。&lt;/p></description></item></channel></rss>