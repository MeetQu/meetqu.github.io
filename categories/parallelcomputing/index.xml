<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>parallelcomputing on Anthony's blog</title><link>https://sudrizzz.github.io/categories/parallelcomputing/</link><description>Recent content in parallelcomputing on Anthony's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 Nov 2020 10:00:00 +0800</lastBuildDate><atom:link href="https://sudrizzz.github.io/categories/parallelcomputing/index.xml" rel="self" type="application/rss+xml"/><item><title>并行计算课程实践</title><link>https://sudrizzz.github.io/posts/parallel-computing/</link><pubDate>Tue, 24 Nov 2020 10:00:00 +0800</pubDate><guid>https://sudrizzz.github.io/posts/parallel-computing/</guid><description>写在前面 Vim 基本操作 简介 vim 共分为三种模式，分别是命令模式（Command mode），输入模式（Insert mode）和底线命令模式（Last line mode）。 详见 Linux vi/vim | 菜鸟教程。
编辑文件 编辑文本文件可以通过 vim 文件名 实现，如果文件原本不存在，则 Vim 会自动新建该文件。例如新建或编辑名为 test.txt 的文件，可以通过下面的命令实现。
1vim test.txt 进入编辑界面之后，按下 i 键或 Insert 键，即可进入输入模式开始编辑文件。
常用命令 命令 操作说明 Esc 退出编辑模式 :wq 保存文件并退出 Vim :q! 不保存文件并强制退出 Vim（慎用） :set nu 显示行号 i / Insert 切换到输入模式 x 删除当前光标所在处的字符 d 剪切光标所在行 dd 删除光标所在行 yy 复制光标所在行 p 粘贴已复制或已剪切的数据 u 撤销上一步操作 gg 跳转到文件开头 G(shift+g) 跳转到文件末尾 /word 搜索名称为 word 的字符串 ^ 跳转到光标所在行首 $ 跳转到光标所在行尾 代码及数据 本文的代码均存放在 Github，地址 https://github.</description></item></channel></rss>